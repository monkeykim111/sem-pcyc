name: new_model_register

on:
  # 임의로 동작하게끔 하기 위해 workflow_dispatch event 사용
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    name: new model register
    runs-on: ubuntu-latest

    steps:
      - name: torchserve start
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_SSH_IP }}
          username: ${{ secrets.REMOTE_SSH_ID }}
          password: ${{ secrets.REMOTE_SSH_PASSWORD }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          script: |
            whoami
            cd /home/ubuntu/projects_jonathan
            pwd
            # sem_pcyc.mar의 버전 확인할 것
#            torchserve --ts-config ./ts/config.properties --foreground --start --model-store ./model-store --models sem_pcyc=sem_pcyc3.0.mar
      
#       - name: check the performance
#         # ssh에 잘 접속했는지 확인하기
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.REMOTE_SSH_IP }}
#           username: ${{ secrets.REMOTE_SSH_ID }}
#           password: ${{ secrets.REMOTE_SSH_PASSWORD }}
#           port: ${{ secrets.REMOTE_SSH_PORT }}
#           script: |
#             source activate pytorch_p36
#             curl http://0.0.0.0:8080/predictions/sem_pcyc -T guitar.png
#             curl http://0.0.0.0:8080/predictions/sem_pcyc -T house.png
#             curl http://0.0.0.0:8080/predictions/sem_pcyc -T pavillon.png
#             curl http://0.0.0.0:8080/predictions/sem_pcyc -T worktable.png
#             curl http://0.0.0.0:8080/predictions/sem_pcyc -T seats.png
#             curl http://0.0.0.0:8080/predictions/sem_pcyc -T bistro.png
#             curl http://0.0.0.0:8080/predictions/sem_pcyc -T backyard.png
#             curl http://0.0.0.0:8080/predictions/sem_pcyc -T closet.png
       
#       - name: file transfer with scp
#         # 마찬가지로 확인할 것
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.REMOTE_SSH_IP }}
#           username: ${{ secrets.REMOTE_SSH_ID }}
#           password: ${{ secrets.REMOTE_SSH_PASSWORD }}
#           port: ${{ secrets.REMOTE_SSH_PORT }}
#           script: |
#             scp -i ./.pem /home/ubuntu/projects_jonathan/model-store/sem_pcyc3.0.mar ubuntu@remote ip:/home/ubuntu/sem-pcyc/model-store
#             scp -i ./.pem /home/ubuntu/projects_jonathan/acc_im_em.npy ubuntu@remote ip:/home/ubuntu/ml_data/sem_pcyc/npy
#             scp -i ./.pem /home/ubuntu/sem_pcyc/aux/Semantic/intersection/new_plus_words.npy ubuntu@remote ip:/home/ubuntu/ml_data/sem_pcyc/aux/Semantic/intersection
#             scp -i ./.pem /home/ubuntu/sem_pcyc/aux/CheckPoints/intersection/new_plus_words/64/model_best.pth ubuntu@remote ip:/home/ubuntu/ml_data/sem_pcyc/aux/CheckPoints/intersection/new_plus_words/64
#             scp -r -i ./pem /home/ubuntu/sem_pcyc/dataset/intersection/images/ ubuntu@remote ip:/home/ubuntu/ml_data/sem_pcyc/dataset/intersection
#             scp -r -i ./pem /home/ubuntu/sem_pcyc/dataset/intersection/sketches/ ubuntu@remote ip:/home/ubuntu/ml_data/sem_pcyc/dataset/intersection
#             cd /home/ubuntu
          
#       - name: model register
#         # aws ssh로 이동했는지 확인하기
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.REMOTE_aws_IP }}
#           username: ${{ secrets.REMOTE_SSH_aws_ID }}
#           key: ${{ secrets.REMOTE_SSH_aws_KEY }}
#           port: ${{ secrets.REMOTE_SSH_aws_PORT }} 
#           script: |
#             # 모델 등록하기(모델 버전 확인)
#             curl -X POST "http://localhost:8081/models?url=/model-store/sem_pcyc_3.0.mar"
#             # 모델 등록 확인하기
#             curl http://localhost:8081/models/sem_pcyc/3.0
#             # default 모델로 등록하기
#             curl -v -X PUT http://localhost:8081/models/sem_pcyc3.0/set-default
            
            
            
          
          
          
      
        
      
        
